<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.cgmg.model.dao.BoardDao">
	
	<!-- 전체글 목록 조회 -->
	<select id="selectAll" resultType="Board">
		SELECT id, title, writer, viewCnt, DATE_FORMAT(regDate, '%Y-%m-%d') AS regDate, likeCnt
		FROM board
	</select>

	<!-- 상세글 조회 -->
	<select id="selectOne" resultType="Board" parameterType="int">
		SELECT id, title, writer, content, imgSrc, gymAddress, DATE_FORMAT(regDate, '%Y-%m-%d') AS regDate, viewCnt, likeCnt
		FROM board b
		WHERE id = #{id};
	</select>

	<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="Board" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO board (title, writer, content, imgSrc, gymAddress)
		VALUES (#{title}, #{writer}, #{content}, #{imgSrc}, #{gymAddress})
	</insert>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		DELETE FROM board
		WHERE id = #{id}
	</delete>
	
	<!-- 조회수 증가 -->
	<update id="updateViewCnt" parameterType="int">
		UPDATE board
		SET viewCnt = viewCnt+1
		WHERE id = #{id}
	</update>
	
	<!-- 게시글 수정 -->
	<!-- 컬럼이 등록 날짜만 관리를 하고 있다. -->
	<!-- 등록날짜 / 최근 조회날짜 / 수정 날짜 .... -->
	<update id="updateBoard" parameterType="Board">
		UPDATE board
		SET title = #{title}, content = #{content}, imgSrc = #{imgSrc}, gymAddress = #{gymAddress}
		WHERE id = #{id}
	</update>
	
	<!-- 검색기능  -->
	<select id="search" parameterType="SearchCondition" resultType="Board" >
		SELECT id, title, writer, viewCnt, DATE_FORMAT(regDate, '%Y-%m-%d') AS regDate, likeCnt
		FROM board
		<!-- 검색 조건 (동적쿼리)-->
		<if test="key != 'none'">
			WHERE ${key} LIKE concat('%', #{word}, '%')
		</if>
		<!-- 어떤 기준으로 어떤 방향으로 정렬 -->
		<if test="orderBy != 'none'">
			ORDER BY ${orderBy} ${orderByDir}
		</if>
	</select>
	
	<!-- 내가 작성한 글 목록 조회 -->
	<select id="selectByUserId" resultType="Board" parameterType="String">
		SELECT id, title, writer, viewCnt, DATE_FORMAT(regDate, '%Y-%m-%d') AS regDate, likeCnt
		FROM board
		WHERE writer = #{userId}
	</select>
	
	<!-- 게시글 좋아요 등록 -->
	<insert id="insertLikeLog" parameterType="LikeLog">
		INSERT INTO likeLog (userId, postId)
		VALUES (#{userId}, #{postId})
	</insert>
	
	<!-- 게시글 좋아요 취소 -->
	<delete id="deleteLikeLog" parameterType="LikeLog">
		DELETE FROM likeLog
		WHERE userId = #{userId}
		AND postId = #{postId}
	</delete>
	
	<!-- 게시글 좋아요수 업데이트 -->
	<update id="updateLikeCnt" parameterType="LikeLog">
		UPDATE board
		<choose>
			<when test="cntChange == 'up'">
				SET likeCnt = likeCnt + 1
			</when>
			<when test="cntChange == 'down'">
				SET likeCnt = likeCnt - 1
			</when>
		</choose>
		WHERE id = #{postId}
	</update>
	
	<!-- 게시글 좋아요한 목록 조회 -->
	<select id="selectLikedBoard" parameterType="String">
		SELECT l.postId, b.title, b.writer, DATE_FORMAT(b.regDate, '%Y-%m-%d') AS regDate, b.viewCnt, b.likeCnt
		FROM board b
		RIGHT OUTER JOIN (SELECT userId, postId
						  FROM likeLog
						  WHERE userId = #{userId}) l
		ON b.id = l.postId
	</select>

</mapper>